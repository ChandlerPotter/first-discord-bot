let fetch = require("node-fetch")
let base = "https://api.pgamerx.com/v3"
let api_key = 
process
  .on('unhandledRejection', (reason, p) => {
    console.error(reason, 'Unhandled Rejection at Promise', p);
  })
  .on('uncaughtException', err => {
    console.error(err, 'Uncaught Exception thrown');
    process.exit(1);
  });
  process.on('error', (err) => {
    console.error('whoops! there was an error', err);
  });

  class API {
        constructor (key, options = {}) {
          if(!key) throw new Error('API Key is missing! Get one at https://api.pgamerx.com/register.')
          this.key = key
          if(key){
            api_key = this.key
          }
          else {
          api_key = "nothing"
          }
          api_key = this.key

          this.options = Object.assign(options)
        }
        async joke(type){
            if(!type) throw new Error("No Joke type provided! Refer to https://api.pgamerx.com/endpoints for types")
            let res = await fetch(`${base}joke/${type}`, {
              headers: {"x-api-key" : api_key}
            })
            let json = await res.json()
            return(json)
        }
       async image(type){
        if(!type) throw new Error("No Joke type provided! Refer to https://api.pgamerx.com/endpoints for types")
        let res = await fetch(`${base}image/${type}`, {
          headers: {"x-api-key" : api_key}
        })

        let json = await res.json()
        return(json[0])
       }
       async ai(message, language, bot_name , owner_name , unique_id , type){
        if(!bot_name){
        bot_name = "Random Stuff Api"
        }
        if(!owner_name){
        owner_name = "PGamerX"
        }
        if(!unique_id){
        unique_id = api_key
        }
        if(!type){
        type = "stable"
        }
        if(!message) throw new Error("No Message was provided")
           let res = await fetch(`${base}/ai/response?message=${message}&language=${language}&dev_name=${owner_name}&bot_name=${bot_name}&type=${type}&unique_id=${unique_id}`, {
            headers: {"x-api-key" : api_key}
          })
           let json = await res.json()
           let response = json[0]
           return(response)
           
       }
      }


module.exports = API
